{"version":3,"file":"index.umd.js","sources":["../index.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\n\ntype TOptions = {\n  maxFontSize?: number;\n  minFontSize?: number;\n  recalcOnResize?: boolean;\n  resolution?: number;\n};\n\n/**\n * React hook that iteratively adjusts the font size so that text will fit in\n * a div.\n *\n *   - checks if text is overflowing by using `scrollHeight` and `offsetHeight`\n *     https://stackoverflow.com/a/10017343/101911\n *   - uses binary search\n *   - with default parameters, makes a maximum of 5 adjustments with a\n *     resolution of 5% font size from 20-100%\n */\nconst useFitText = ({\n  maxFontSize = 100,\n  minFontSize = 20,\n  recalcOnResize = false,\n  resolution = 5,\n}: TOptions = {}) => {\n  const initState = useCallback(\n    () => ({\n      fontSize: maxFontSize,\n      fontSizePrev: minFontSize,\n      fontSizeMax: maxFontSize,\n      fontSizeMin: minFontSize,\n    }),\n    [maxFontSize, minFontSize],\n  );\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [state, setState] = useState(initState());\n  const { fontSize, fontSizeMax, fontSizeMin, fontSizePrev } = state;\n\n  // recalculate text size on window resize if `recalcOnResize` option is true\n  useEffect(() => {\n    if (!recalcOnResize) {\n      return;\n    }\n    let timeoutId: number;\n    const onResize = () => {\n      window.clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(() => {\n        setState(initState());\n      }, 100);\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.clearTimeout(timeoutId);\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [initState, recalcOnResize]);\n\n  useEffect(() => {\n    const isDone = Math.abs(fontSize - fontSizePrev) <= resolution;\n    const isOverflow =\n      !!ref.current &&\n      (ref.current.scrollHeight > ref.current.offsetHeight ||\n        ref.current.scrollWidth > ref.current.offsetWidth);\n    const isAsc = fontSize > fontSizePrev;\n\n    // return if the font size has been adjusted \"enough\" (change within `resolution`)\n    // reduce font size by one increment if it's overflowing\n    if (isDone) {\n      if (isOverflow) {\n        const fontSizeNew =\n          fontSizePrev < fontSize\n            ? fontSizePrev\n            : fontSize - (fontSizePrev - fontSize);\n        setState({\n          fontSize: fontSizeNew,\n          fontSizeMax,\n          fontSizeMin,\n          fontSizePrev,\n        });\n      }\n      return;\n    }\n\n    // binary search to adjust font size\n    let delta: number;\n    let newMax = fontSizeMax;\n    let newMin = fontSizeMin;\n    if (isOverflow) {\n      delta = isAsc ? fontSizePrev - fontSize : fontSizeMin - fontSize;\n      newMax = Math.min(fontSizeMax, fontSize);\n    } else {\n      delta = isAsc ? fontSizeMax - fontSize : fontSizePrev - fontSize;\n      newMin = Math.max(fontSizeMin, fontSize);\n    }\n    setState({\n      fontSize: fontSize + delta / 2,\n      fontSizeMax: newMax,\n      fontSizeMin: newMin,\n      fontSizePrev: fontSize,\n    });\n  }, [fontSize, fontSizeMax, fontSizeMin, fontSizePrev, ref, resolution]);\n\n  return { fontSize: `${fontSize}%`, ref };\n};\n\nexport default useFitText;\n"],"names":["ref$1","initState","useCallback","fontSize","maxFontSize","fontSizePrev","minFontSize","fontSizeMax","fontSizeMin","ref","useRef","useState","useEffect","recalcOnResize","timeoutId","onResize","window","clearTimeout","setTimeout","setState","addEventListener","removeEventListener","isDone","Math","abs","resolution","isOverflow","current","scrollHeight","offsetHeight","scrollWidth","offsetWidth","isAsc","delta","newMax","newMin","min","max"],"mappings":"2NAmBoBA,kBAKN,uCAJE,wCACA,2CACG,qCACJ,OAEPC,EAAYC,gCAEdC,SAAUC,EACVC,aAAcC,EACdC,YAAaH,EACbI,YAAaF,IAEf,CAACF,EAAaE,IAGVG,EAAMC,SAAuB,QACTC,WAASV,wFAInCW,0BACOC,OAGDC,EACEC,aACJC,OAAOC,aAAaH,GACpBA,EAAYE,OAAOE,sBACjBC,EAASlB,MACR,aAELe,OAAOI,iBAAiB,SAAUL,cAEhCC,OAAOC,aAAaH,GACpBE,OAAOK,oBAAoB,SAAUN,MAEtC,CAACd,EAAWY,IAEfD,2BACQU,EAASC,KAAKC,IAAIrB,EAAWE,IAAiBoB,EAC9CC,IACFjB,EAAIkB,UACLlB,EAAIkB,QAAQC,aAAenB,EAAIkB,QAAQE,cACtCpB,EAAIkB,QAAQG,YAAcrB,EAAIkB,QAAQI,aACpCC,EAAQ7B,EAAWE,KAIrBiB,EACEI,GAKFP,EAAS,CACPhB,SAJAE,EAAeF,EACXE,EACAF,GAAYE,EAAeF,eAG/BI,cACAC,eACAH,aAOF4B,EACAC,EAAS3B,EACT4B,EAAS3B,EACTkB,GACFO,EAAQD,EAAQ3B,EAAeF,EAAWK,EAAcL,EACxD+B,EAASX,KAAKa,IAAI7B,EAAaJ,KAE/B8B,EAAQD,EAAQzB,EAAcJ,EAAWE,EAAeF,EACxDgC,EAASZ,KAAKc,IAAI7B,EAAaL,IAEjCgB,EAAS,CACPhB,SAAUA,EAAW8B,EAAQ,EAC7B1B,YAAa2B,EACb1B,YAAa2B,EACb9B,aAAcF,MAEf,CAACA,EAAUI,EAAaC,EAAaH,EAAcI,EAAKgB,IAEpD,CAAEtB,SAAaA,UAAaM"}