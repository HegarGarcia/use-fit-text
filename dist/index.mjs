import{useCallback as n,useEffect as e,useLayoutEffect as t,useRef as i,useState as r}from"react";import o from"resize-observer-polyfill";export default function(f){void 0===f&&(f={});var u=f.maxFontSize;void 0===u&&(u=100);var c=f.minFontSize;void 0===c&&(c=20);var a=f.resolution;void 0===a&&(a=5);var z=n(function(){return{fontSize:u,fontSizePrev:c,fontSizeMax:u,fontSizeMin:c}},[u,c]),S=i(null),v=i(!0),l=r(z),m=l[0],s=l[1],M=m.fontSize,d=m.fontSizeMax,h=m.fontSizeMin,x=m.fontSizePrev,w=null,p=r(function(){return new o(function(){w=window.requestAnimationFrame(function(){v.current?v.current=!1:s(z())})})})[0];return e(function(){return S.current&&p.observe(S.current),function(){w&&window.cancelAnimationFrame(w),p.disconnect()}},[w,p]),t(function(){var n=Math.abs(M-x)<=a,e=!!S.current&&(S.current.scrollHeight>S.current.offsetHeight||S.current.scrollWidth>S.current.offsetWidth),t=M>x;if(n)e&&s({fontSize:x<M?x:M-(x-M),fontSizeMax:d,fontSizeMin:h,fontSizePrev:x});else{var i,r=d,o=h;e?(i=t?x-M:h-M,r=Math.min(d,M)):(i=t?d-M:x-M,o=Math.max(h,M)),s({fontSize:M+i/2,fontSizeMax:r,fontSizeMin:o,fontSizePrev:M})}},[M,d,h,x,S,a]),{fontSize:M+"%",ref:S}}
//# sourceMappingURL=index.mjs.map
